// Mocks generated by Mockito 5.4.5 from annotations
// in seek_challenge/test/presentation/bloc/qr_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:seek_challenge/domain/entities/qr_code.dart' as _i2;
import 'package:seek_challenge/domain/repositories/qr_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeQrCode_0 extends _i1.SmartFake implements _i2.QrCode {
  _FakeQrCode_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [QrRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockQrRepository extends _i1.Mock implements _i3.QrRepository {
  MockQrRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<String> get qrCodeStream =>
      (super.noSuchMethod(
            Invocation.getter(#qrCodeStream),
            returnValue: _i4.Stream<String>.empty(),
          )
          as _i4.Stream<String>);

  @override
  _i4.Future<List<_i2.QrCode>> getAllQrCodes() =>
      (super.noSuchMethod(
            Invocation.method(#getAllQrCodes, []),
            returnValue: _i4.Future<List<_i2.QrCode>>.value(<_i2.QrCode>[]),
          )
          as _i4.Future<List<_i2.QrCode>>);

  @override
  _i4.Future<_i2.QrCode> saveQrCode(_i2.QrCode? qrCode) =>
      (super.noSuchMethod(
            Invocation.method(#saveQrCode, [qrCode]),
            returnValue: _i4.Future<_i2.QrCode>.value(
              _FakeQrCode_0(this, Invocation.method(#saveQrCode, [qrCode])),
            ),
          )
          as _i4.Future<_i2.QrCode>);

  @override
  _i4.Future<void> deleteQrCode(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteQrCode, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<int?> startQrScanner() =>
      (super.noSuchMethod(
            Invocation.method(#startQrScanner, []),
            returnValue: _i4.Future<int?>.value(),
          )
          as _i4.Future<int?>);

  @override
  _i4.Future<void> stopQrScanner() =>
      (super.noSuchMethod(
            Invocation.method(#stopQrScanner, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
